/**
 * Definition for singly-linked list.
 * class Node {
 * public:
 *     int data;
 *     Node *next;
 *     Node() : data(0), next(nullptr) {}
 *     Node(int x) : data(x), next(nullptr) {}
 *     Node(int x, Node *next) : data(x), next(next) {}
 * };
 */

Node *rotate(Node *head, int k) {
      if(head==NULL) return head;
        int count=0;

       Node *ptr=head;
        while(ptr){
            count++;
            ptr=ptr->next;
        }

        k= k%count;
        if(k==0) return head;
        Node*prev=NULL;
        Node*curr=head;

        for(int i=1;i<=(count-k);i++){
            prev=curr;
            curr=curr->next;
        }

        prev->next=NULL;
        Node * newHead=curr;
        while(curr->next){
            curr=curr->next;
        }
        curr->next=head;

        return newHead;
}

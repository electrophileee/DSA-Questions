long long getTrappedWater(long long* arr, int n) {

        vector<long long> maxLeft(n,0);       
        vector<long long> maxRight(n,0);

         maxLeft[0]=arr[0];
         maxRight[n-1]=arr[n-1];
        for(int i=1;i<n;i++)
        {
            maxLeft[i]= max(arr[i] , maxLeft[i-1]);
        }

        for(int i=n-2;i>=0;i--)
        {
            maxRight[i]= max(arr[i] ,maxRight[i+1]);
        }

        long long sum=0;
        for(int i=0;i<n;i++)
        {
          sum += (min(maxLeft[i],maxRight[i])-arr[i]);
        }


        return sum;
}

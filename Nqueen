#include<bits/stdc++.h>

vector<vector<int>>ans;
bool isSafe(int row ,int col ,int n,vector<vector<int>>&board){
    
    for(int i=row ;i>=0;i--){
        if(board[i][col]==1) return false;
    }

    for(int i=row,j=col;i>=0&&j>=0;i--,j--){
        if(board[i][j]==1) return false;
    }
    for(int i=row,j=col;i>=0&&j<n;i--,j++){
        if(board[i][j]==1) return false;
    }

    return true;
}
void put(vector<int>&temp,vector<vector<int>>&board,int n){
for(int i=0;i<n;i++){
    for(int j=0;j<n;j++){
        temp.push_back(board[i][j]);
    }
}
}
void solve(int row,int n ,vector<vector<int>>&board){
   if(row==n){
       vector<int>temp;
       put(temp,board,n);
       ans.push_back(temp);;
       return;
   } 

   for(int i=0;i<n;i++){

       if(isSafe(row,i,n,board)){
           board[row][i]=1;
           solve(row+1,n,board);
           board[row][i]=0;
       }
   }

}

vector<vector<int>> solveNQueens(int n) {
    vector<vector<int>>board(n,vector<int>(n,0));
         solve(0,n,board); 
      return ans;
}
